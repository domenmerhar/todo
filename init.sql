-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Group"
(
    id serial NOT NULL,
    user_id text COLLATE pg_catalog."default" NOT NULL,
    group_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    public boolean NOT NULL DEFAULT false,
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    icon text COLLATE pg_catalog."default" NOT NULL,
    color character varying(7) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Group_pkey" PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."Task"
(
    id serial NOT NULL,
    group_id serial NOT NULL,
    "order" numeric(4, 2) NOT NULL,
    task_name character varying(100) COLLATE pg_catalog."default" NOT NULL,
    finished boolean NOT NULL DEFAULT false,
    CONSTRAINT "Task_pkey" PRIMARY KEY (id, group_id)
);

CREATE TABLE IF NOT EXISTS public.account
(
    id text COLLATE pg_catalog."default" NOT NULL,
    "accountId" text COLLATE pg_catalog."default" NOT NULL,
    "providerId" text COLLATE pg_catalog."default" NOT NULL,
    "userId" text COLLATE pg_catalog."default" NOT NULL,
    "accessToken" text COLLATE pg_catalog."default",
    "refreshToken" text COLLATE pg_catalog."default",
    "idToken" text COLLATE pg_catalog."default",
    "accessTokenExpiresAt" timestamp without time zone,
    "refreshTokenExpiresAt" timestamp without time zone,
    scope text COLLATE pg_catalog."default",
    password text COLLATE pg_catalog."default",
    "createdAt" timestamp without time zone NOT NULL,
    "updatedAt" timestamp without time zone NOT NULL,
    CONSTRAINT account_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.session
(
    id text COLLATE pg_catalog."default" NOT NULL,
    "expiresAt" timestamp without time zone NOT NULL,
    token text COLLATE pg_catalog."default" NOT NULL,
    "createdAt" timestamp without time zone NOT NULL,
    "updatedAt" timestamp without time zone NOT NULL,
    "ipAddress" text COLLATE pg_catalog."default",
    "userAgent" text COLLATE pg_catalog."default",
    "userId" text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT session_pkey PRIMARY KEY (id),
    CONSTRAINT session_token_key UNIQUE (token)
);

CREATE TABLE IF NOT EXISTS public."user"
(
    id text COLLATE pg_catalog."default" NOT NULL,
    name text COLLATE pg_catalog."default" NOT NULL,
    email text COLLATE pg_catalog."default" NOT NULL,
    "emailVerified" boolean NOT NULL,
    image text COLLATE pg_catalog."default",
    "createdAt" timestamp without time zone NOT NULL,
    "updatedAt" timestamp without time zone NOT NULL,
    username text COLLATE pg_catalog."default",
    "displayUsername" text COLLATE pg_catalog."default",
    CONSTRAINT user_pkey PRIMARY KEY (id),
    CONSTRAINT user_email_key UNIQUE (email),
    CONSTRAINT user_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.verification
(
    id text COLLATE pg_catalog."default" NOT NULL,
    identifier text COLLATE pg_catalog."default" NOT NULL,
    value text COLLATE pg_catalog."default" NOT NULL,
    "expiresAt" timestamp without time zone NOT NULL,
    "createdAt" timestamp without time zone,
    "updatedAt" timestamp without time zone,
    CONSTRAINT verification_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public."Group"
    ADD CONSTRAINT "Group_user_id_fkey" FOREIGN KEY (user_id)
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;


ALTER TABLE IF EXISTS public."Task"
    ADD CONSTRAINT "Task_group_id_fkey" FOREIGN KEY (group_id)
    REFERENCES public."Group" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.account
    ADD CONSTRAINT "account_userId_fkey" FOREIGN KEY ("userId")
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.session
    ADD CONSTRAINT "session_userId_fkey" FOREIGN KEY ("userId")
    REFERENCES public."user" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;